<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Base_Messages_Reply_Failure" xml:space="preserve">
    <value>Error during processing</value>
  </data>
  <data name="Base_Messages_Reply_Interactive" xml:space="preserve">
    <value>Interactive reaction needed</value>
  </data>
  <data name="Base_Messages_Reply_Success" xml:space="preserve">
    <value>Thank you {0}, I added the following informations:</value>
  </data>
  <data name="BotName" xml:space="preserve">
    <value>Raidfelden Info Bot</value>
  </data>
  <data name="BotPrefix" xml:space="preserve">
    <value>.</value>
  </data>
  <data name="Gyms_Errors_InteractiveMode" xml:space="preserve">
    <value>{0} gyms found containing the word fragment "{1}". Please select the appropriate arena using the number from the list.</value>
  </data>
  <data name="Gyms_Errors_NothingFound" xml:space="preserve">
    <value>No gym found containing the word fragment "{0}". Did you make a typing error?</value>
  </data>
  <data name="Gyms_Errors_ToManyFound" xml:space="preserve">
    <value>{0} gyms found that contain the word fragment "{1}". Please formulate the name a little more exactly, maximum {2} may remain for the interactive mode.</value>
  </data>
  <data name="ModuleRaidsCommandAdd" xml:space="preserve">
    <value>add</value>
  </data>
  <data name="ModuleRaidsCommandAddDescription" xml:space="preserve">
    <value>Command to add raids to the map</value>
  </data>
  <data name="ModuleRaidsIdentifier" xml:space="preserve">
    <value>raids</value>
  </data>
  <data name="Pokemon_Errors_InteractiveMode" xml:space="preserve">
    <value>{0} {2}pokemon found containing the word fragment "{1}". Please select the appropriate pokemon using the number from the list.</value>
  </data>
  <data name="Pokemon_Errors_NothingFound" xml:space="preserve">
    <value>No {1}pokemon found containing the word fragment "{0}". Did you make a typing error?</value>
  </data>
  <data name="Pokemon_Errors_ToManyFound" xml:space="preserve">
    <value>{0} {3}pokemon found that contain the word fragment "{1}". Please formulate the name a little more exactly, maximum {2} may remain for the interactive mode.</value>
  </data>
  <data name="Raids_Errors_Hatch_NoEntryFound" xml:space="preserve">
    <value>Currently there is no raid registered at the gym "{0}".</value>
  </data>
  <data name="Raids_Errors_LevelToHigh" xml:space="preserve">
    <value>The maximum permissible value for a raid level is 5.</value>
  </data>
  <data name="Raids_Errors_LevelToLow" xml:space="preserve">
    <value>The smallest permissible value for a raid level is 1</value>
  </data>
  <data name="Raids_Errors_NotAnRaidImage" xml:space="preserve">
    <value>The picture is probably not a raid image</value>
  </data>
  <data name="Raids_Errors_TimeFormat" xml:space="preserve">
    <value>The remaining time must be specified in mm or mm:ss format.</value>
  </data>
  <data name="Raids_Errors_Unexpected" xml:space="preserve">
    <value>An unexcpected error occured: {0}</value>
  </data>
  <data name="Raids_Messages_BossAdded" xml:space="preserve">
    <value>{0} at the gym "{1}", ends at {2}</value>
  </data>
  <data name="Raids_Messages_BossHatched" xml:space="preserve">
    <value>{0} is now the new raid boss at the arena "{1}".</value>
  </data>
  <data name="Raids_Messages_EggAdded" xml:space="preserve">
    <value>Level {0} raid at the gym "{1}", starts at {2}</value>
  </data>
  <data name="Raids_Messages_Ocr_Successful_Title" xml:space="preserve">
    <value>OCR-Recognition successful</value>
  </data>
  <data name="Raids_Messages_Successful_Text" xml:space="preserve">
    <value>Thank you {0} I added the raid with the following parameters: </value>
  </data>
  <data name="Raids_Messages_Successful_Title" xml:space="preserve">
    <value>Raid addedd successfully</value>
  </data>
</root>
